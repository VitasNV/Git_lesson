# 1. Дан список. Выведите те его элементы, которые встречаются в списке только один
# раз. Элементы нужно выводить в том порядке, в котором они встречаются в
# списке.
# a = [0, 1, 2, 3, 4, 5, 5, 2, 0, 6]
# rez = []
# for i in a:
#     if a.count(i) == 1:
#         rez.append(i)
# print('Элементы которые встречаются в списке только один раз: ', rez)

# 2. Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. В формировании других пар не участвуют.
# a = [0, 1, 2, 3, 4, 5, 5, 2, 0, 6, 0, 8, 0]
# p = 0
# for i in set(a):
#     p += a.count(i) // 2
#     print(i, '-', a.count(i) // 2)
# print('Пар в списке: ', p)

# 3. Даны два кортежа:
# C_1 = (35, 78,21,37, 2,98, 6, 100, 231)
# C_2 = (45, 21,124,76,5,23,91,234)
# Необходимо определить:
# 1) Сумма элементов какого из кортежей больше и вывести соответствующее
# сообщение на экран (Сумма больше в кортеже - ..)
# 2) Вывести на экран порядковые номера минимальных и максимальных элементов
# этих кортежей
#
# C_1 = (35, 78, 21, 37, 2, 98, 6, 100, 231)
# C_2 = (45, 21, 124, 76, 5, 23, 91, 234)
# if sum(C_1) > sum(C_2):
#     print('Сумма больше в кортеже C_1:', sum(C_1))
# else:
#     print('Сумма больше в кортеже C_2:', sum(C_2))
# print('Порядковые номера мин. и макс. элементов С_1: ', C_1.index(min(C_1)) + 1, ',',
#       C_1.index(max(C_1)) + 1)
# print('Порядковые номера мин. и макс. элементов С_2: ', C_2.index(min(C_2)) + 1, ',',
#       C_2.index(max(C_2)) + 1)


# 4. Создайте словарь из строки ' An apple a day keeps the doctor away' следующим
# образом: в качестве ключей возьмите символы строки, а значениями пусть будут
# числа, соответствующие количеству вхождений данной буквы в строку
# a = ' An apple a day keeps the doctor away'
# a = a.lower()
# d = {symbol: a.count(symbol) for symbol in a}
# print(d)

# 5. Клиент приходит в кондитерскую. Он хочет приобрести один или несколько видов
# продукции, а также узнать её состав.
# Реализуйте кондитерскую.
# У вас есть словарь, где ключ – название продукции (торт, пирожное, маффин и
# т.д.). Значение – список, который содержит состав, цену (за 100гр) и кол-во (в
# граммах).
# Предложите выбор:
# 1) Если человек хочет посмотреть описание: название – описание
# 2) Если человек хочет посмотреть цену: название – цена.
# 3) Если человек хочет посмотреть количество: название – количество.
# 4) Всю информацию.
# 5) Приступить к покупке:
# С клавиатуры вводите название торта и его кол-во. n – выход из программы.
# Посчитать цену выбранных товаров и сколько товаров осталось в изначальном
# списке
# 6) До свидания
# Krama = {'торт': [8.00, 300, 'шоколадный, 500кКал на 100 гр.'],
#          'пирожное': [5.80, 500, 'заварное, 200кКал на 100 гр.'],
#          'маффин': [4.00, 600, 'вишневый, 150кКал на 100 гр.'],
#          'рулет': [5.20, 400, 'абрикосовый, 300кКал на 100 гр.']}
# Basket = {}  # Корзина покупок
# sum = 0  # Стоимость за товар
# WT = 0  # Общий вес за товар со всех покупок
# WTT = 0  # Общий вес за товары одинаковые со всех покупок
# total = 0  # Итого за чек
# print()
# print('Можете узнать:\n'
#       '1) описание '
#       '2) цену '
#       '3) количество '
#       '4) Всю информацию '
#       '5) Приступить к покупке '
#       '6) До свидания ')
# while True:
#     V = input('Введите свой выбор, для выхода из покупок 6: ')
#     if V == '1':
#         for key, value in Krama.items():
#             print(key, '-', value[2])
#     if V == '2':
#         for key, value in Krama.items():
#             print(key, '-', value[0])
#     if V == '3':
#         for key, value in Krama.items():
#             print(key, '-', value[1])
#     if V == '4':
#         for key, value in Krama.items():
#             print(key, '-', value[0], '-', value[1], '-', value[2])
#     if V == '6':
#         print('До свидания!')
#         break
#     if V == 'n':
#         print('Приходите в следующий раз!', '\n')
#         break
#     if V == '5':
#         while True:
#             product = input("Что нужно купить? (n - ничего) ")  # Ввод товара, который является ключом из словаря
#             product = product.lower()
#             if product == '6' or product not in Krama.keys():
#                 print('Приходите в следующий раз!', '\n')
#                 break
#             WT = int(input("Сколько взвесить? "))
#             if WT > Krama[product][1]:
#                 print('Столько нет в наличии, остаток на складе - ', Krama[product][1], 'g')
#                 continue
#
#             sum = Krama[product][0] * WT/100  # Цена за товар
#             Krama[product][1] -= WT  # Отнимаем от исходного словаря кол-во, что купили
#             Basket[product] = [WT, round(sum, 2)]  # round(X,N) округление после запятой
#             total += Krama[product][0] * WT/100
#             WTT += Basket[product][0]
#             print(WTT)
#
# print()
# print('        Чек № 1')
# print(30 * "-")
# for key, value in Basket.items():
#     print(f'{key}  - {value[0]} g   - {value[1]} BYN')
#
#
# print(30 * "-")
# print('Итого к оплате: ', round(total, 2), 'руб.')
# print('Ждем Вас в следующий раз!', '\n')
# print('Обновление остатка')
# print('товара  -', 'руб за 100г.-', 'остаток г.-', 'описание')
# print(60 * "-")
# for key, value in Krama.items():
#     print(f'{key}  - {value[0]} BYN   - {value[1]} g - {value[2]}')

# 6. Даны два списка чисел. Посчитайте, сколько чисел содержится одновременно как в
# первом списке, так и во втором
# a = [0, 1, 2, 3, 4, 5, 6]
# b = [7, 8, 9, 0, 1, 2, 3]
# c = set(a+b)
# print('Чисел в списках одновременно: ', len(c))


# 7. Напишите программу, демонстрирующую работу try\except\finally
# a1 = int(input('Введите 1-е число: '))
# a2 = int(input('Введите 2-ое число: '))
# try:
#     a = a1/a2
# except ZeroDivisionError:
#     print('Ошибка деления на ноль')
# else:
#     print(a)
# finally:
#     print('Оператор finally был выполнен')

# 8. В текстовый файл построчно записаны фамилия и имя учащихся класса и его
# оценка за контрольную. Вывести на экран всех учащихся, чья оценка меньше 3
# # баллов и посчитать средний балл по классу


with open('4.txt', 'r', encoding='utf-8') as f:
    s = f.readlines()
    # print(s)
    l_n = []  # список оценок
    for l in s:
        l = i.replace('\n', '')
        l = i.split()  # разделяем строку
        # print(l)
        for i in l:
            if i.isdigit():  # находим оценку
                l_n.append(int(i))
                if int(i) < 3:
                    l = ' '.join(l)  # соединяем в строку
                    print(l)  # ученики у кого оценка меньше 3

print('Кол-во учеников в классе', len(l_n))  # для расчета средней оценки
print('Все оценки: ', l_n)
print('Средняя оценка по классу: ', round((sum(l_n)) / len(l_n), 2))